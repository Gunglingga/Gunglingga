{"ast":null,"code":"var _jsxFileName = \"D:\\\\TUGAS AKHIR\\\\ticketingBlockchain\\\\frontend-tiket\\\\src\\\\components\\\\CreateSaleForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { uploadImage } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateSaleForm = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [eventName, setEventName] = useState('');\n  const [ticketImageUrl, setTicketImageUrl] = useState('');\n  const [price, setPrice] = useState('');\n  const [ipfsHash, setIpfsHash] = useState('');\n  const handleFileChange = event => {\n    setImage(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!image) {\n      alert('Please select an image');\n      return;\n    }\n    try {\n      const result = await uploadImage(image);\n      setIpfsHash(result.IpfsHash);\n      alert('Image uploaded successfully. IPFS Hash: ' + result.IpfsHash);\n      // Anda bisa menambahkan kode di sini untuk memanggil fungsi untuk membuat tiket\n    } catch (error) {\n      console.error('Failed to upload image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Ticket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Event Name\",\n        value: eventName,\n        onChange: e => setEventName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ticket Image URL\",\n        value: ticketImageUrl,\n        onChange: e => setTicketImageUrl(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), ipfsHash && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"IPFS Hash: \", ipfsHash]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateSaleForm, \"s8g2yQaRsPf/b5bjAHCER8Ka01w=\");\n_c = CreateSaleForm;\nexport default CreateSaleForm;\nvar _c;\n$RefreshReg$(_c, \"CreateSaleForm\");","map":{"version":3,"names":["React","useState","uploadImage","jsxDEV","_jsxDEV","CreateSaleForm","_s","image","setImage","eventName","setEventName","ticketImageUrl","setTicketImageUrl","price","setPrice","ipfsHash","setIpfsHash","handleFileChange","event","target","files","handleSubmit","preventDefault","alert","result","IpfsHash","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","required","_c","$RefreshReg$"],"sources":["D:/TUGAS AKHIR/ticketingBlockchain/frontend-tiket/src/components/CreateSaleForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { uploadImage } from '../utils/api';\r\n\r\nconst CreateSaleForm = () => {\r\n    const [image, setImage] = useState(null);\r\n    const [eventName, setEventName] = useState('');\r\n    const [ticketImageUrl, setTicketImageUrl] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [ipfsHash, setIpfsHash] = useState('');\r\n\r\n    const handleFileChange = (event) => {\r\n        setImage(event.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (!image) {\r\n            alert('Please select an image');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const result = await uploadImage(image);\r\n            setIpfsHash(result.IpfsHash);\r\n            alert('Image uploaded successfully. IPFS Hash: ' + result.IpfsHash);\r\n            // Anda bisa menambahkan kode di sini untuk memanggil fungsi untuk membuat tiket\r\n        } catch (error) {\r\n            console.error('Failed to upload image:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Create a New Ticket</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Event Name\" \r\n                    value={eventName} \r\n                    onChange={(e) => setEventName(e.target.value)} \r\n                    required \r\n                />\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Ticket Image URL\" \r\n                    value={ticketImageUrl} \r\n                    onChange={(e) => setTicketImageUrl(e.target.value)} \r\n                    required \r\n                />\r\n                <input type=\"file\" onChange={handleFileChange} required />\r\n                <button type=\"submit\">Upload Image</button>\r\n            </form>\r\n            {ipfsHash && <p>IPFS Hash: {ipfsHash}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateSaleForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}