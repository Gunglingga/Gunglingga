{"ast":null,"code":"var _jsxFileName = \"D:\\\\TUGAS AKHIR\\\\ticketingBlockchain\\\\frontend-tiket\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport CreateSaleForm from './components/CreateSaleForm';\nimport TicketList from './components/TicketList';\nimport './App.css';\nimport { contractAddress, contractABI } from './contractConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [account, setAccount] = useState('');\n  const [contract, setContract] = useState(null);\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        setAccount(accounts[0]);\n        console.log(\"Connected account:\", accounts[0]);\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const ticketContract = new ethers.Contract(contractAddress, contractABI, signer);\n        setContract(ticketContract);\n      } catch (error) {\n        console.error(\"User denied wallet connection:\", error);\n      }\n    } else {\n      alert(\"Please install Metamask\");\n    }\n  };\n  useEffect(() => {\n    connectWallet();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Concert Ticket Sale\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), account ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected as: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ticket-list-panel\",\n      children: contract && /*#__PURE__*/_jsxDEV(TicketList, {\n        contract: contract\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-panel\",\n      children: contract && /*#__PURE__*/_jsxDEV(CreateSaleForm, {\n        contract: contract,\n        userAddress: account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"847xKVlVuxuSnVde8OOl8S0jMAU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ethers","CreateSaleForm","TicketList","contractAddress","contractABI","jsxDEV","_jsxDEV","App","_s","account","setAccount","contract","setContract","connectWallet","window","ethereum","accounts","request","method","console","log","provider","providers","Web3Provider","signer","getSigner","ticketContract","Contract","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","userAddress","_c","$RefreshReg$"],"sources":["D:/TUGAS AKHIR/ticketingBlockchain/frontend-tiket/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport CreateSaleForm from './components/CreateSaleForm';\r\nimport TicketList from './components/TicketList';\r\nimport './App.css';\r\nimport { contractAddress, contractABI } from './contractConfig';\r\n\r\nconst App = () => {\r\n  const [account, setAccount] = useState('');\r\n  const [contract, setContract] = useState(null);\r\n\r\n  const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n      try {\r\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n        setAccount(accounts[0]);\r\n        console.log(\"Connected account:\", accounts[0]);\r\n\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();\r\n        const ticketContract = new ethers.Contract(contractAddress, contractABI, signer);\r\n        setContract(ticketContract);\r\n      } catch (error) {\r\n        console.error(\"User denied wallet connection:\", error);\r\n      }\r\n    } else {\r\n      alert(\"Please install Metamask\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectWallet();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Concert Ticket Sale</h1>\r\n      {account ? (\r\n        <p>Connected as: {account}</p>\r\n      ) : (\r\n        <p>Please connect your wallet.</p>\r\n      )}\r\n      <div className=\"ticket-list-panel\">\r\n        {contract && <TicketList contract={contract} />}\r\n      </div>\r\n      <div className=\"form-panel\">\r\n        {contract && <CreateSaleForm contract={contract} userAddress={account} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}