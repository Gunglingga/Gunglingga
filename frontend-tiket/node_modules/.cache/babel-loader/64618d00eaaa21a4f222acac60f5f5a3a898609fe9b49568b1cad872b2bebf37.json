{"ast":null,"code":"var _jsxFileName = \"D:\\\\TUGAS AKHIR\\\\ticketingBlockchain\\\\frontend-tiket\\\\src\\\\components\\\\CreateSaleForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport axios from 'axios'; // Import axios untuk mengirim file ke backend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateSaleForm({\n  contract,\n  userAddress\n}) {\n  _s();\n  const [eventName, setEventName] = useState('');\n  const [eventOrganizer, setEventOrganizer] = useState('');\n  const [eventDate, setEventDate] = useState('');\n  const [ticketPrice, setTicketPrice] = useState('');\n  const [saleEndDate, setSaleEndDate] = useState('');\n  const [posterFile, setPosterFile] = useState(null); // Simpan file poster\n  const [ticketImageFile, setTicketImageFile] = useState(null); // Simpan file gambar tiket\n  const [posterPreview, setPosterPreview] = useState('');\n  const [ticketImagePreview, setTicketImagePreview] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [ticketCount, setTicketCount] = useState(0);\n  useEffect(() => {\n    const fetchTicketCount = async () => {\n      if (contract) {\n        try {\n          const count = await contract.getTicketCount();\n          setTicketCount(count.toNumber());\n        } catch (error) {\n          console.error('Error memuat jumlah tiket:', error);\n        }\n      }\n    };\n    fetchTicketCount();\n  }, [contract]);\n  const handlePosterChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setPosterFile(file); // Simpan file poster\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPosterPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleTicketImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setTicketImageFile(file); // Simpan file gambar tiket\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setTicketImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const uploadToPinata = async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const res = await axios.post('http://localhost:5000/upload-to-pinata', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return res.data.pinataUrl;\n    } catch (error) {\n      console.error('Gagal mengunggah ke Pinata:', error);\n      throw new Error('Upload to Pinata failed');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!contract || !userAddress) {\n      alert('Pastikan kontrak dan dompet Anda terhubung.');\n      return;\n    }\n    if (!eventName || !eventOrganizer || !eventDate || !ticketPrice || !saleEndDate || !posterFile || !ticketImageFile) {\n      alert('Harap isi semua kolom.');\n      return;\n    }\n    setLoading(true);\n    try {\n      // Unggah file ke Pinata dan dapatkan URL\n      const posterUrl = await uploadToPinata(posterFile);\n      const ticketImageUrl = await uploadToPinata(ticketImageFile);\n      const priceInWei = ethers.utils.parseEther(ticketPrice);\n      const saleEnd = Math.floor(new Date(saleEndDate).getTime() / 1000);\n      const eventDateTimestamp = Math.floor(new Date(eventDate).getTime() / 1000);\n      const barcode = Math.floor(Math.random() * 1e12);\n      const tx = await contract.createTicket(eventName, eventOrganizer, posterUrl, ticketImageUrl, priceInWei, saleEnd, eventDateTimestamp, barcode, {\n        value: ethers.utils.parseEther('0.05')\n      });\n      await tx.wait();\n      alert('Tiket berhasil dibuat!');\n\n      // Reset form\n      setEventName('');\n      setEventOrganizer('');\n      setEventDate('');\n      setTicketPrice('');\n      setSaleEndDate('');\n      setPosterFile(null);\n      setTicketImageFile(null);\n      setPosterPreview('');\n      setTicketImagePreview('');\n      setTicketCount(await contract.getTicketCount().toNumber());\n    } catch (error) {\n      console.error('Error creating sale:', error);\n      alert('Gagal membuat tiket: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? 'Membuat...' : 'Buat Tiket'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateSaleForm, \"SDZ6bEzQyV692D2qO6+nI0vjx2I=\");\n_c = CreateSaleForm;\nexport default CreateSaleForm;\nvar _c;\n$RefreshReg$(_c, \"CreateSaleForm\");","map":{"version":3,"names":["useState","useEffect","ethers","axios","jsxDEV","_jsxDEV","CreateSaleForm","contract","userAddress","_s","eventName","setEventName","eventOrganizer","setEventOrganizer","eventDate","setEventDate","ticketPrice","setTicketPrice","saleEndDate","setSaleEndDate","posterFile","setPosterFile","ticketImageFile","setTicketImageFile","posterPreview","setPosterPreview","ticketImagePreview","setTicketImagePreview","loading","setLoading","ticketCount","setTicketCount","fetchTicketCount","count","getTicketCount","toNumber","error","console","handlePosterChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleTicketImageChange","uploadToPinata","formData","FormData","append","res","post","headers","data","pinataUrl","Error","handleSubmit","preventDefault","alert","posterUrl","ticketImageUrl","priceInWei","utils","parseEther","saleEnd","Math","floor","Date","getTime","eventDateTimestamp","barcode","random","tx","createTicket","value","wait","message","onSubmit","children","type","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/TUGAS AKHIR/ticketingBlockchain/frontend-tiket/src/components/CreateSaleForm.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport axios from 'axios'; // Import axios untuk mengirim file ke backend\r\n\r\nfunction CreateSaleForm({ contract, userAddress }) {\r\n  const [eventName, setEventName] = useState('');\r\n  const [eventOrganizer, setEventOrganizer] = useState('');\r\n  const [eventDate, setEventDate] = useState('');\r\n  const [ticketPrice, setTicketPrice] = useState('');\r\n  const [saleEndDate, setSaleEndDate] = useState('');\r\n  const [posterFile, setPosterFile] = useState(null); // Simpan file poster\r\n  const [ticketImageFile, setTicketImageFile] = useState(null); // Simpan file gambar tiket\r\n  const [posterPreview, setPosterPreview] = useState('');\r\n  const [ticketImagePreview, setTicketImagePreview] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [ticketCount, setTicketCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchTicketCount = async () => {\r\n      if (contract) {\r\n        try {\r\n          const count = await contract.getTicketCount();\r\n          setTicketCount(count.toNumber());\r\n        } catch (error) {\r\n          console.error('Error memuat jumlah tiket:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchTicketCount();\r\n  }, [contract]);\r\n\r\n  const handlePosterChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setPosterFile(file); // Simpan file poster\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPosterPreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleTicketImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setTicketImageFile(file); // Simpan file gambar tiket\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setTicketImagePreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const uploadToPinata = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/upload-to-pinata', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n      return res.data.pinataUrl;\r\n    } catch (error) {\r\n      console.error('Gagal mengunggah ke Pinata:', error);\r\n      throw new Error('Upload to Pinata failed');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!contract || !userAddress) {\r\n      alert('Pastikan kontrak dan dompet Anda terhubung.');\r\n      return;\r\n    }\r\n\r\n    if (!eventName || !eventOrganizer || !eventDate || !ticketPrice || !saleEndDate || !posterFile || !ticketImageFile) {\r\n      alert('Harap isi semua kolom.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      // Unggah file ke Pinata dan dapatkan URL\r\n      const posterUrl = await uploadToPinata(posterFile);\r\n      const ticketImageUrl = await uploadToPinata(ticketImageFile);\r\n\r\n      const priceInWei = ethers.utils.parseEther(ticketPrice);\r\n      const saleEnd = Math.floor(new Date(saleEndDate).getTime() / 1000);\r\n      const eventDateTimestamp = Math.floor(new Date(eventDate).getTime() / 1000);\r\n      const barcode = Math.floor(Math.random() * 1e12);\r\n\r\n      const tx = await contract.createTicket(\r\n        eventName,\r\n        eventOrganizer,\r\n        posterUrl,\r\n        ticketImageUrl,\r\n        priceInWei,\r\n        saleEnd,\r\n        eventDateTimestamp,\r\n        barcode,\r\n        { value: ethers.utils.parseEther('0.05') }\r\n      );\r\n\r\n      await tx.wait();\r\n      alert('Tiket berhasil dibuat!');\r\n\r\n      // Reset form\r\n      setEventName('');\r\n      setEventOrganizer('');\r\n      setEventDate('');\r\n      setTicketPrice('');\r\n      setSaleEndDate('');\r\n      setPosterFile(null);\r\n      setTicketImageFile(null);\r\n      setPosterPreview('');\r\n      setTicketImagePreview('');\r\n      setTicketCount(await contract.getTicketCount().toNumber());\r\n    } catch (error) {\r\n      console.error('Error creating sale:', error);\r\n      alert('Gagal membuat tiket: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* Form and other inputs stay the same */}\r\n      <button type=\"submit\" disabled={loading}>\r\n        {loading ? 'Membuat...' : 'Buat Tiket'}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CreateSaleForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}